// <auto-generated />
using HotelProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240416171437_HotelNew")]
    partial class HotelNew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelProject.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhisicalAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Budapest",
                            Country = "Hungary",
                            HotelName = "Transilvania",
                            PhisicalAddress = "Forest Transilvania",
                            Rating = 7.0
                        },
                        new
                        {
                            Id = 2,
                            City = "Kaspi",
                            Country = "Sakartvelo",
                            HotelName = "Tvaladuri",
                            PhisicalAddress = "Village Tvaladi",
                            Rating = 10.0
                        },
                        new
                        {
                            Id = 3,
                            City = "New-York",
                            Country = "USA",
                            HotelName = "Continental",
                            PhisicalAddress = "Manhattan",
                            Rating = 15.0
                        });
                });

            modelBuilder.Entity("HotelProject.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId")
                        .IsUnique();

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "ჯუმბერ",
                            HotelId = 1,
                            LastName = "ტყაბლაძე"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "დონალდ",
                            HotelId = 2,
                            LastName = "ტრამპი"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "სადამ",
                            HotelId = 3,
                            LastName = "ჰუსეინი"
                        });
                });

            modelBuilder.Entity("HotelProject.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DailyPrice")
                        .HasColumnType("float");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyPrice = 100.0,
                            HotelId = 1,
                            IsFree = true,
                            RoomName = "101"
                        },
                        new
                        {
                            Id = 2,
                            DailyPrice = 90.0,
                            HotelId = 1,
                            IsFree = true,
                            RoomName = "102"
                        },
                        new
                        {
                            Id = 3,
                            DailyPrice = 150.0,
                            HotelId = 1,
                            IsFree = false,
                            RoomName = "103"
                        },
                        new
                        {
                            Id = 4,
                            DailyPrice = 50.0,
                            HotelId = 2,
                            IsFree = true,
                            RoomName = "A1"
                        },
                        new
                        {
                            Id = 5,
                            DailyPrice = 60.0,
                            HotelId = 2,
                            IsFree = false,
                            RoomName = "A2"
                        },
                        new
                        {
                            Id = 6,
                            DailyPrice = 70.0,
                            HotelId = 2,
                            IsFree = true,
                            RoomName = "B1"
                        },
                        new
                        {
                            Id = 7,
                            DailyPrice = 1000.0,
                            HotelId = 3,
                            IsFree = false,
                            RoomName = "101"
                        },
                        new
                        {
                            Id = 8,
                            DailyPrice = 1000.0,
                            HotelId = 3,
                            IsFree = true,
                            RoomName = "201"
                        },
                        new
                        {
                            Id = 9,
                            DailyPrice = 1000.0,
                            HotelId = 3,
                            IsFree = true,
                            RoomName = "301"
                        });
                });

            modelBuilder.Entity("HotelProject.Models.Manager", b =>
                {
                    b.HasOne("HotelProject.Models.Hotel", "Hotel")
                        .WithOne("Manager")
                        .HasForeignKey("HotelProject.Models.Manager", "HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelProject.Models.Room", b =>
                {
                    b.HasOne("HotelProject.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelProject.Models.Hotel", b =>
                {
                    b.Navigation("Manager");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
